#include "Wire.h"
#include "I2Cdev.h"
#include "MPU6050.h"
#include "Arduino.h"
#include "DFRobotDFPlayerMini.h"

#ifdef ESP32
  #define FPSerial Serial1
#else
  #include <SoftwareSerial.h>
  SoftwareSerial FPSerial(26, 27); // RX=26, TX=27 for XIAO ESP32C3 or other boards
#endif

DFRobotDFPlayerMini myDFPlayer;
MPU6050 mpu;

int16_t ax, ay, az, gx, gy, gz; // Added gyroscope variables
bool isPlaying = false; // Track playback status

void setup() {
  #ifdef ESP32
    FPSerial.begin(9600, SERIAL_8N1, 26, 27);
  #else
    FPSerial.begin(9600);
  #endif

  Serial.begin(115200);
  Serial.println(F("Initializing DFPlayer..."));

  if (!myDFPlayer.begin(FPSerial)) {
    Serial.println(F("Unable to begin: Check connection or SD card."));
    while (true); // Stop execution if DFPlayer fails
  }

  myDFPlayer.volume(30); // Set volume level (max 30)
  Serial.println(F("DFPlayer Mini online."));

  Wire.begin();
  mpu.initialize();

  if (!mpu.testConnection()) {
    Serial.println(F("MPU6050 connection failed! Check wiring."));
    while (true);
  } else {
    Serial.println(F("MPU6050 connected successfully!"));
  }
}

void loop() {
  mpu.getMotion6(&ax, &ay, &az, &gx, &gy, &gz); // Now includes gyroscope values

  Serial.print("AX: "); Serial.print(ax);
  Serial.print(" | AY: "); Serial.print(ay);
  Serial.print(" | AZ: "); Serial.println(az);

  // Adjust tilt sensitivity values as needed
  if (ay > 8000 && !isPlaying) { // MPU6050 tilted upward
    myDFPlayer.play(1); // Play first track
    isPlaying = true;
    Serial.println("MPU6050 UP - Audio Playing");
  } 
  else if (ay < 3000 && isPlaying) { // MPU6050 moved back down
    myDFPlayer.stop(); // Stop playback
    isPlaying = false;
    Serial.println("MPU6050 DOWN - Audio Stopped");
  }

  delay(500); // Slight delay for stability
}
